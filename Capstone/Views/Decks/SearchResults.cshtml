@model Capstone.Models.View_Models.SearchViewModel

@{
    ViewData["Title"] = "SearchResults";
}

@{
    List<Card> cards = Model.SearchResults.ToList();
}

<h2>Search Results</h2>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => cards[0].Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => cards[0].Front)
            </th>
            <th>
                @Html.DisplayNameFor(model => cards[0].Back)
            </th>
            <th>
                @Html.DisplayNameFor(model => cards[0].ImageURL)
            </th>
            <th>
                @Html.DisplayNameFor(model => cards[0].DeckId)
            </th>
            <th>
                @Html.DisplayNameFor(model => cards[0].CardOrder)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.SearchResults)
        {
        <tr>
            <td class="td-cardId">
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Front)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Back)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ImageURL)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DeckId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CardOrder)
            </td>
            <td>

                <form asp-action="AddCardFromSearch" method="post">
                    <input type="submit" value="Add Card to Deck" />
                    <input type="hidden" class="hidden-cardId" asp-for="Card.Id" />
                    <select asp-for="Card.DeckId" asp-items="Model.UserDecks"></select>
                </form>
            </td>
        </tr>
        }
    </tbody>
</table>

<script src="~/js/Decks/SearchResults.js"></script>