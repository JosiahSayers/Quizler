@model Capstone.Models.Deck

@{
    ViewData["Title"] = Model.Name + " Deck";
}

<link href="~/css/Decks/ViewDeck.css" rel="stylesheet" />

<div class="deck-title">
    <h1>@Model.Name Deck</h1>
</div>

<div class="deck-description">
    <p>@Model.Description</p>
</div>

<hr />

<div class="cards">
    @foreach (var card in Model.Cards)
    {
        <div class="card">
            @if (String.IsNullOrEmpty(card.ImageURL))
            {
                <p class="front">@card.Front</p>
            }
            @if (!String.IsNullOrEmpty(card.ImageURL))
            {
                <img src="@card.ImageURL" />

            }
            <p class="back hidden">@card.Back</p>
            <a class="hidden" asp-action="UpdateCard" asp-route-cardId="@card.Id">Update Card</a>
            <a class="hidden" asp-action="AddTag" asp-route-cardId="@card.Id">Add Tag</a>
            <a class="hidden" asp-action="DeleteCard" asp-route-cardId="@card.Id">Delete Card</a>
        </div>
    }
</div>

<hr />

<div>
    @if (Model.Cards.Count > 0)
    {
        <a asp-controller="Study" asp-action="Index" asp-route-deckId="@Model.Id"><button>Start Study Session</button></a>
    }
    <a asp-action="AddCard" asp-route-deckId="@Model.Id"><button>Add a card to this deck</button></a>
    <a asp-action="EditDeck" asp-route-deckId="@(Model.Id)"><button>Edit Deck</button></a>
    <a asp-action="DeleteDeck" asp-route-deckId="@(Model.Id)"><button>Delete Deck</button></a>
    <a asp-action="Index" asp-route-userId="@(Model.UserId)"><button class="delete">Back to Decks</button></a>
    <i class="fa fa-trash" aria-hidden="false"></i>
</div>

<script src="~/js/Decks/ViewDeck.js"></script>

