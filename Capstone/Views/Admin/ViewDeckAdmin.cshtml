@model Capstone.Models.Deck

@{
    string noDeck = "";

    noDeck = Model.Name.ToLower().Contains("deck") ? "" : " Deck";

    ViewData["Title"] = Model.Name + noDeck;
}

<div class="deck-title">
    <h1>@Model.Name @noDeck</h1>
</div>

<div class="deck-description">
    <p>@Model.Description</p>
</div>

<div class="content-box">

    <div class="button-box">
        <hr />
        <div class="deck-buttons">
            <a class="btn-approve button">Approve</a>
            <a class="btn-deny button" id="@Model.Id">Deny</a>
            <a asp-action="Index" class="button" asp-controller="Admin">Cancel</a>
            <a class="hidden" title="Delete Deck?" asp-action="DeleteDeck" asp-route-deckId="@(Model.Id)"><i class="fa fa-trash" aria-hidden="true"></i></a>
        </div>
    </div>

    <div class="cards">
        @foreach (var card in Model.Cards)
        {
            <div class="card" style="background-color: @Model.DeckColor;">
                <div class="card-info">
                    @if (String.IsNullOrEmpty(card.ImageURL))
                    {
                        <p class="front" style="color: @Model.TextColor;">@card.Front</p>
                    }
                    @if (!String.IsNullOrEmpty(card.ImageURL))
                    {
                        <img src="@card.ImageURL" />

                    }
                    <p class="back hidden" style="color: @Model.TextColor;">@card.Back</p>
                </div>
            </div>
        }
    </div>


</div>

<script src="~/js/Decks/ViewDeckAdmin.js"></script>
<link href="~/css/Decks/ViewDeck.css" rel="stylesheet" />
